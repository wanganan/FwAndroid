apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    /**
     * 签名信息配置,需要写在defaultConfig和buildTypes前面,不然编译的时候会报错。
     * 通过android studio创建一个jks签名文件： 路径：Build—> Generate Signed Bundle/APK ---->APK---->Create new
     * 创建好后复制弹出的文本，如keytool -importkeystore -srckeystore E:\workspace\fwandroid.jks -destkeystore E:\workspace\fwandroid.jks -deststoretype pkcs12"
     * 进入cmd 命令行界面，输入刚复制的命令行将keystore文件转化为行业标准格式PKCS12
     *
     * 生成signingConfigs
     * 1.Project structure-Modules-Signing Configs-创建release-输入已创建的keystore信息
     * 2.Project structure-Modules-Default Config-Signing Config-选择$signingConfigs.release-OK
     *
     * 开发过程中使用发布模式：底部Build-BuildVariants-Build Variants-debug/release切换
     */
    signingConfigs {
        debug {
            storeFile file('fwandroid.jks')
            storePassword 'fwandroid'
            keyAlias = 'fwandroid'
            keyPassword 'fwandroid'
        }
        release {
            storeFile file('E:\\workspace\\fwandroid.jks')
            storePassword 'fwandroid'
            keyAlias = 'fwandroid'
            keyPassword 'fwandroid'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    //默认配置
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'HostName', rootProject.ext.apidebug.HostName
            //是否使用zipAlign优化apk,Android sdk包里面的工具，能够对打包的应用程序进行优化，让整个系统运行的更快
            zipAlignEnabled false
            //VersionName的后缀
            versionNameSuffix rootProject.ext.android.versionName
            //签名配置文件
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField 'String', 'HostName', rootProject.ext.apirelease.HostName
            //是否使用zipAlign优化apk,Android sdk包里面的工具，能够对打包的应用程序进行优化，让整个系统运行的更快
            zipAlignEnabled true
            //VersionName的后缀
            versionNameSuffix rootProject.ext.android.versionName
            //签名配置文件
            signingConfig signingConfigs.release
            //指定插件使用的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /**
     * Cannot inline bytecode built with JVM target 1.8 into bytecode that is being built with JVM target 1.6.
     * Please specify proper ‘-jvm-target’ option
     * 原因：项目是用jvm1.6 构建的 而库则用到了1.8 两者不兼容
     * 解决办法：手动配置支持jvm1.8的特性，
     */
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

//依赖配置
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //约束布局
    implementation rootProject.ext.dependencies["constraintlayout"]

    //刷新依赖
    implementation rootProject.ext.dependencies["smartrefresh-kernel"]
    implementation rootProject.ext.dependencies["smartrefresh-header"]
    implementation rootProject.ext.dependencies["smartrefresh-footer"]

    //BaseRecyclerViewAdapterHelper
    implementation rootProject.ext.dependencies["baserecyclerview-adapter"]

    //retrofit+RxJava+RxLifecycle
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    implementation rootProject.ext.dependencies["okhttp-log-interceptor"]
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxlifecycle"]
    implementation rootProject.ext.dependencies["rxlifecycle-android"]
    implementation rootProject.ext.dependencies["rxlifecycle-components"]
    implementation rootProject.ext.dependencies["rxlifecycle-kotlin"]

    //logger
    implementation rootProject.ext.dependencies["logger"]

    //今日头条屏幕适配
    implementation rootProject.ext.dependencies["autosize"]

    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
}
